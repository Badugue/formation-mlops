:::{.nonincremental}
:::: {.callout-tip collapse="true" icon=false}
## Part 1 : From notebook to python scripts

1. All scripts related to our custom model are stored in the `src` folder. Check them out.
2. Run a training of the model using MLflow. To do so:
    a. Create a `mlflow-run.sh` empty file at the root of the project
    b. Change it permissions by running `chmod 777 mlflow-run.sh` in the terminal
    c. Add the following content to `mlflow-run.sh`:

    ```sh
    # Set MLFLOW_S3_ENDPOINT_URL environment variable
    export MLFLOW_S3_ENDPOINT_URL='https://minio.lab.sspcloud.fr'

    # Set MLFLOW_TRACKING_URI environment variable
    export MLFLOW_TRACKING_URI="https://projet-formation-417155.user.lab.sspcloud.fr"

    # Set MLFLOW_EXPERIMENT_NAME environment variable
    export MLFLOW_EXPERIMENT_NAME="fasttext"

    mlflow run ~/work/formation-mlops/ --env-manager=local \
    -P remote_server_uri=$MLFLOW_TRACKING_URI \
    -P experiment_name=$MLFLOW_EXPERIMENT_NAME

    ```

    d. Execute `./mlflow-run.sh` in the terminal
3. Open the MLflow user interface: 
    + `SSPCloud -> My services -> Open MLflow`
4. Look at the results of your previous run:
    + `Experiments -> fasttext -> <run_name>`
5. In `train.py` change some parameters (i.e. `dim = 25`)
6. Train a new model by executing `./mlflow-run.sh`
7. In MLflow, compare the 2 models by plotting the accuracy against one parameter you have changed (i.e. `dim`)
    + `Select the 2 runs -> Compare -> Scatter Plot -> Select your X and Y axis`
::::
:::


:::

:::

<!-- - leur faire logger des params ou metrics en plus

1. From notebook to python scripts + run
2. Autolog versus manual log 
3. Model delivery with onboarded preprocessing (notebook comme romain sur ex precedent fetch + pred) -->
